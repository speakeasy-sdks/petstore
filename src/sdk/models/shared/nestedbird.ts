/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum Unit {
    Months = "months",
    Years = "years",
    Days = "days",
}

export class Age extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit: Unit;
}

export class Span extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit?: string;
}

export class Wings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "count" })
    count?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "span" })
    @Type(() => Span)
    span?: Span;
}

export class Flight extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "canFly" })
    canFly?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "wings" })
    @Type(() => Wings)
    wings?: Wings;
}

export class Geography extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "latitude" })
    latitude?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "longitutde" })
    longitutde?: string;
}

export class Location extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "geography" })
    @Type(() => Geography)
    geography?: Geography;
}

export class NestedBird extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "age" })
    @Type(() => Age)
    age?: Age;

    @SpeakeasyMetadata()
    @Expose({ name: "flight" })
    @Type(() => Flight)
    flight?: Flight;

    @SpeakeasyMetadata()
    @Expose({ name: "food" })
    food?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata({ elemType: Location })
    @Expose({ name: "location" })
    @Type(() => Location)
    location?: Location[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}
