/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Animals } from "./animals";
import { Expose, Type } from "class-transformer";

export class ComplexObjectDataBirds extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "food" })
    food: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class ComplexObjectData extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: Animals })
    @Expose({ name: "animal" })
    @Type(() => Animals)
    animal?: Animals[];

    @SpeakeasyMetadata()
    @Expose({ name: "birds" })
    @Type(() => ComplexObjectDataBirds)
    birds?: ComplexObjectDataBirds;

    @SpeakeasyMetadata()
    @Expose({ name: "createdDate" })
    createdDate?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedDate" })
    updatedDate?: any;
}

export class ComplexObjectMeta2 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "pageNumber" })
    pageNumber?: string;
}

export class ComplexObject extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => ComplexObjectData)
    data?: ComplexObjectData;

    @SpeakeasyMetadata()
    @Expose({ name: "meta" })
    meta?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}
